local player = game.Players.LocalPlayer
local prefix = ";"

local commands = {
    ["kill"] = function (target)
        local btools = player.Backpack:FindFirstChild("Building Tools") or player.Character:FindFirstChild("Building Tools")

        if btools then
            local args = {
                [1] = "SyncMove",
                [2] = {
                    [1] = {
                        ["Part"] = target.Character.Head,
                        ["CFrame"] = target.Character.Head.CFrame
                    }
                }
            }
            btools.SyncAPI.ServerEndpoint:InvokeServer(unpack(args))
        else
            warn("btools are required to run f3x commands")
        end
    end,

    ["punish"] = function (target)
        local btools = player.Backpack:FindFirstChild("Building Tools") or player.Character:FindFirstChild("Building Tools")

        if btools then
            
        else
            warn("btools are required to run f3x commands")
        end
    end
}

game.StarterGui:SetCore("SendNotification", {
    Title = "Hello, "..player.Name,
    Text = "Welcome to Xtreme Admin",
    Button1 = "View Commands";
})

player.Chatted:Connect(function(message)
    if message:sub(1, 1) == prefix then
        message = message:sub(2, #message)
        message = message:lower()

        local players =  game.Players:GetPlayers()
        local words = message:split(" ")
        local command_string = words[1]
        local target_string = words[2]
        local targets = {}

        if target_string == "me" or target_string == nil then
            table.insert(targets, player)

        elseif target_string == "all" then
            for _, v in pairs(players) do
                table.insert(targets, v)
            end

        elseif target_string == "others" then
            for _, v in pairs(players) do
                if v ~= player then
                    table.insert(targets, v)
                end
            end

        elseif target_string == "random" then
            table.insert(targets, players[math.random(1, #players)])
        end

        if target_string then
            for _, v in pairs(players) do
                if v.Name:lower():find(target_string) then
                    table.insert(targets, v)
                end
            end
        end

        if commands[command_string] then
            for _, target in pairs(targets) do
                if target ~= player then
                    commands[command_string](target)
                end
                if table.find(targets, player) then
                    commands[command_string](player)
                end
            end
        end
    end
end)
